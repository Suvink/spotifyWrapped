[{"/Users/suvinnimnaka/Desktop/im-trying-to-build-sth/spotifyWrapped/src/index.js":"1","/Users/suvinnimnaka/Desktop/im-trying-to-build-sth/spotifyWrapped/src/reportWebVitals.js":"2","/Users/suvinnimnaka/Desktop/im-trying-to-build-sth/spotifyWrapped/src/App.js":"3","/Users/suvinnimnaka/Desktop/im-trying-to-build-sth/spotifyWrapped/src/LogIn/Login.js":"4","/Users/suvinnimnaka/Desktop/im-trying-to-build-sth/spotifyWrapped/src/LogIn/spotify.js":"5","/Users/suvinnimnaka/Desktop/im-trying-to-build-sth/spotifyWrapped/src/Components/Artist/TopArtist.js":"6","/Users/suvinnimnaka/Desktop/im-trying-to-build-sth/spotifyWrapped/src/Components/Song/TopSong.js":"7","/Users/suvinnimnaka/Desktop/im-trying-to-build-sth/spotifyWrapped/src/Components/TopFiveSongs/TopFiveSongs.js":"8","/Users/suvinnimnaka/Desktop/im-trying-to-build-sth/spotifyWrapped/src/Components/Start/Start.js":"9","/Users/suvinnimnaka/Desktop/im-trying-to-build-sth/spotifyWrapped/src/Components/TopGenre/TopGenre.js":"10","/Users/suvinnimnaka/Desktop/im-trying-to-build-sth/spotifyWrapped/src/Components/TopFiveSongs/Song.js":"11","/Users/suvinnimnaka/Desktop/im-trying-to-build-sth/spotifyWrapped/src/Components/TopGenre/ring.js":"12"},{"size":581,"mtime":1671697196619,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1671697196619,"results":"15","hashOfConfig":"14"},{"size":1829,"mtime":1671715074162,"results":"16","hashOfConfig":"14"},{"size":929,"mtime":1671714843914,"results":"17","hashOfConfig":"14"},{"size":686,"mtime":1671715795874,"results":"18","hashOfConfig":"14"},{"size":15138,"mtime":1671715048305,"results":"19","hashOfConfig":"14"},{"size":14397,"mtime":1671715054767,"results":"20","hashOfConfig":"14"},{"size":5471,"mtime":1671715062298,"results":"21","hashOfConfig":"14"},{"size":5511,"mtime":1671715042814,"results":"22","hashOfConfig":"14"},{"size":4346,"mtime":1671715069798,"results":"23","hashOfConfig":"14"},{"size":1133,"mtime":1671715059523,"results":"24","hashOfConfig":"14"},{"size":1946,"mtime":1671715066797,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"g7acju",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"28"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/suvinnimnaka/Desktop/im-trying-to-build-sth/spotifyWrapped/src/index.js",[],["58","59"],"/Users/suvinnimnaka/Desktop/im-trying-to-build-sth/spotifyWrapped/src/reportWebVitals.js",[],"/Users/suvinnimnaka/Desktop/im-trying-to-build-sth/spotifyWrapped/src/App.js",["60"],"import './App.css';\nimport { Switch, Route, useLocation } from \"react-router-dom\";\nimport React, { useState, useEffect } from 'react'\nimport Login from './LogIn/Login';\nimport { getTokenFromUrl } from './LogIn/spotify'\nimport SpotifyWebApi from 'spotify-web-api-js'\nimport { AnimatePresence } from 'framer-motion';\nimport Start from './Components/Start/Start';\nimport TopArtist from './Components/Artist/TopArtist';\nimport TopSong from './Components/Song/TopSong';\nimport TopFiveSongs from './Components/TopFiveSongs/TopFiveSongs';\nimport TopGenre from './Components/TopGenre/TopGenre'\n\nfunction App() {\n\n  const location = useLocation()\n\n\n  const spotify = new SpotifyWebApi()\n  const [token, setToken] = useState(null)\n\n  useEffect(() => {\n    const hash = getTokenFromUrl()\n    window.location.hash = \"\"\n\n    const _token = hash.access_token\n    if (_token) {\n      setToken(_token)\n\n      spotify.setAccessToken(_token)\n\n    }\n  }, [])\n\n  return (\n\n    <>\n      {token ? (\n        <AnimatePresence exitBeforeEnter >\n          <Switch location={location} key={location.pathname}>\n            <Route exact path=\"/\" component={() => <Start spotify={spotify} />} />\n            <Route path=\"/top_artist\" component={() => <TopArtist spotify={spotify} />} />\n            <Route path=\"/top_song\" component={() => <TopSong spotify={spotify} />} />\n            {/* <Route  path=\"/top_song\" component={() => <TopSong spotify={spotify}/>}/> */}\n            {/* <Route  path=\"/top_artist\" component={ () => <TopArtist spotify={spotify}/>}/> */}\n            <Route path=\"/top_five_songs\" component={() => <TopFiveSongs spotify={spotify} />} />\n            <Route path=\"/top_genre\" component={() => <TopGenre spotify={spotify} />} />\n          </Switch>\n        </AnimatePresence>\n      ) : <Login />}\n    </>\n\n  );\n}\n\nexport default App;\n","/Users/suvinnimnaka/Desktop/im-trying-to-build-sth/spotifyWrapped/src/LogIn/Login.js",[],"/Users/suvinnimnaka/Desktop/im-trying-to-build-sth/spotifyWrapped/src/LogIn/spotify.js",[],"/Users/suvinnimnaka/Desktop/im-trying-to-build-sth/spotifyWrapped/src/Components/Artist/TopArtist.js",["61","62"],"import React, { useEffect, useState } from 'react'\nimport { motion } from 'framer-motion'\nimport { useSpring, animated } from 'react-spring'\nimport { FaChevronUp, FaChevronDown } from \"react-icons/fa\";\nimport './TopArtist.css'\nimport { Link } from 'react-router-dom';\n\nfunction TopArtist({ spotify }) {\n    const [topArtist, setTopArtist] = useState(null)\n    const [loading, setLoading] = useState(false)\n    const [album, setAlbum] = useState([])\n    const [letters, setLetters] = useState(0)\n    const [audioUrl, setAudioUrl] = useState(null)\n\n    const calc = (x, y) => [((window.innerHeight / 2) - y) / 50, (x - window.innerWidth / 2) / 50, 1.1]\n    const trans = (x, y, s) => `perspective(600px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`\n    const [props, set] = useSpring(() => ({ xys: [0, 0, 1], config: { mass: 5, tension: 350, friction: 50 } }))\n\n\n\n    const circleWrapper = {\n        in: {\n            scale: 0,\n            clipPath: \"circle(500%)\"\n        },\n        anim: {\n            scale: [null, 1.2, 1],\n            clipPath: \"circle(0%)\",\n            transition: {\n                delay: 0.2,\n                duration: 4,\n                times: [0, 0.8, 1],\n                // ease: [0.43, 0.13, 0.23, 0.1],\n                staggerChildren: 0.2\n            }\n        }\n    }\n\n    const circle = {\n        in: { rotate: 0, y: \"-50%\", x: \"-50%\" },\n        anim: {\n            // opacity: 0,\n            rotate: [null, -15, 0],\n            transition: {\n                duration: 2,\n                times: [0, 0.3, 1],\n                // ease: [0.22, 1, 0.36, 1]\n            }\n        }\n\n    }\n\n    const artistInfo = {\n        in: { y: \"110%\" },\n        anim: {\n            y: 0,\n            transition: {\n                duration: 1,\n                delay: 4.6\n            }\n        },\n        out: {\n            y: \"-110%\",\n            transition: {\n                duration: 1,\n            }\n        }\n    }\n\n    async function getTopArtist() {\n        const resp = await spotify.getMyTopArtists();\n        const artists = resp.items;\n        spotify.getArtistTopTracks(artists[0].id, \"us\").then(a => setAudioUrl(a.tracks[0].preview_url))\n        let letter = 0;\n        setTopArtist(artists[0])\n        spotify.getArtistAlbums(artists[1].id).then(albumResp => {\n            setAlbum(albumResp.items)\n            albumResp.items.map(item => {\n                letter += item.name.length\n            })\n            setLetters(letter)\n        })\n        setLoading(true)\n    }\n\n\n\n    useEffect(() => {\n        getTopArtist()\n    }, [])\n\n\n\n    return (\n        <motion.div className=\"TopArtist\">\n            <motion.div\n                className=\"initial-animate-screen\"\n                variants={circleWrapper}\n                initial=\"in\"\n                animate=\"anim\"\n                onAnimationComplete={() => document.querySelector(\".initial-animate-screen\").classList.add(\"display-none\")}\n            >\n                <motion.div className=\"circle\" id=\"one\" variants={circle}\n                // animate={{rotate:[0, -15, 0]}} transition={{duration:2,ease: [0.31, 0.78, 0.83, 0.67] }}\n                >\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                </motion.div>\n                <motion.div className=\"circle two\" variants={circle}\n                // animate={{rotate:[0, -12, 0]}} transition={{duration:2,ease: [0.31, 0.78, 0.83, 0.67] }}\n                >\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                </motion.div>\n                <motion.div className=\"circle three\" variants={circle}\n                // animate={{rotate:[0, -9, 0]}} transition={{duration:2,ease:[0.31, 0.78, 0.83, 0.67] }}\n                >\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                </motion.div>\n                <motion.div className=\"circle four\" variants={circle}\n                // animate={{rotate:[0, -6, 0]}} transition={{duration:2,ease: [0.31, 0.78, 0.83, 0.67] }}\n                >\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                </motion.div>\n                <motion.div className=\"circle five\" variants={circle}\n                // animate={{rotate:[0, -3, 0]}} transition={{duration:2,ease: [0.31, 0.78, 0.83, 0.67] }}\n                >\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                    <h1>THE MOST STREAMED ARTIST</h1>\n                </motion.div>\n            </motion.div>\n            <motion.div\n                className=\"top-artist-cont\"\n                onMouseMove={({ clientX: x, clientY: y }) => {\n                    set({ xys: calc(x, y) })\n                }}\n                onMouseLeave={() => set({ xys: [0, 0, 1] })}\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                transition={{ delay: 4.3 }}\n            >\n                <animated.div\n                    className=\"top-artist-card\"\n                    style={{ transform: props.xys.interpolate(trans) }}\n                >\n                    <div className=\"artist-img\">\n                        <motion.img variants={artistInfo} initial=\"in\" animate=\"anim\" exit=\"out\" src={loading ? topArtist.images[0].url : null} alt=\"\" />\n                    </div>\n                    <div className=\"text\">\n                        <div>\n                            <motion.h2 variants={artistInfo} initial=\"in\" animate=\"anim\" exit=\"out\">The most streamed<br />artist of 2020:</motion.h2>\n                        </div>\n                        <div style={{ transform: \"translateZ(75px)\" }}>\n                            <motion.h1\n                                className=\"artist-name\"\n                                variants={artistInfo} initial=\"in\" animate=\"anim\" exit=\"out\"\n                            >\n                                {loading ? topArtist.name : \"loading\"}\n                            </motion.h1>\n                        </div>\n                        <div>\n                            <motion.p variants={artistInfo} initial=\"in\" animate=\"anim\" exit=\"out\">Someone got the great taste</motion.p>\n                        </div>\n                    </div>\n                </animated.div>\n            </motion.div>\n            <motion.div\n                className=\"album-bg\"\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n\n                transition={{ delay: 4.5, duration: 0.1 }}>\n                <motion.p exit={{ opacity: 0, transition: { duration: 1.5 } }} style={{ fontSize: `${110 / (letters / 40)}vw` }}>{album.map(a => `${a.name} `)}</motion.p>\n            </motion.div>\n            <motion.div className=\"pagination\" initial={{ opacity: 0 }} animate={{ opacity: 1 }} transition={{ duration: 1 }}>\n                <div className=\"prev\">\n                    <Link to=\"/\">\n                        <FaChevronUp style={{ color: \"white\" }} />\n                    </Link>\n                </div>\n                <div className=\"page-no\">\n                    <p><span>1</span> / 4</p>\n                </div>\n                <div className=\"next\">\n                    <Link to=\"/top_song\">\n                        <FaChevronDown style={{ color: \"white\" }} />\n                    </Link>\n                </div>\n            </motion.div>\n            {loading ? (<audio src={audioUrl} autoPlay loop />) : null}\n        </motion.div>\n    )\n}\n\nexport default TopArtist\n","/Users/suvinnimnaka/Desktop/im-trying-to-build-sth/spotifyWrapped/src/Components/Song/TopSong.js",["63","64"],"import React, { useState, useEffect } from 'react'\nimport { motion } from 'framer-motion'\nimport './TopSong.css'\nimport { FaChevronUp, FaChevronDown } from \"react-icons/fa\";\nimport { Link } from 'react-router-dom';\nimport { animated, useSpring } from 'react-spring';\n\nfunction TopSong({ spotify }) {\n\n    const [topSong, setTopSong] = useState(null)\n    const [loaded, setLoaded] = useState(false)\n    const [songCover, setSongCover] = useState(null)\n    const [songPreview, setSongPreview] = useState(null)\n    const [songs, setSongs] = useState(null)\n\n    const calc = (x, y) => [((window.innerHeight / 2) - y) / 50, (x - window.innerWidth / 2) / 50, 1.1]\n    const trans = (x, y, s) => `perspective(600px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`\n    const [props, set] = useSpring(() => ({ xys: [0, 0, 1], config: { mass: 5, tension: 350, friction: 50 } }))\n\n    const circleWrapper = {\n        in: {\n            scale: 0,\n            clipPath: \"circle(500%)\"\n        },\n        anim: {\n            scale: [null, 1.2, 1],\n            clipPath: \"circle(0%)\",\n            transition: {\n                delay: 0.2,\n                duration: 4,\n                times: [0, 0.8, 1],\n                // ease: [0.43, 0.13, 0.23, 0.1],\n                staggerChildren: 0.2\n            }\n        }\n    }\n\n    const circle = {\n        in: { rotate: 0, y: \"-50%\", x: \"-50%\" },\n        anim: {\n            // opacity: 0,\n            rotate: [null, -15, 0],\n            transition: {\n                duration: 2,\n                times: [0, 0.3, 1],\n                // ease: [0.22, 1, 0.36, 1]\n            }\n        }\n    }\n\n    const artistInfo = {\n        in: { y: \"110%\" },\n        anim: {\n            y: \"0%\",\n            transition: {\n                duration: 1,\n                delay: 4.6\n            }\n        },\n        out: {\n            y: \"-110%\",\n            transition: {\n                duration: 1,\n            }\n        }\n    }\n\n\n    async function getTopSong() {\n        const resp = await spotify.getMyTopTracks()\n        const song = resp.items[1]\n        setSongs(resp.items)\n        setTopSong(song.name)\n        setSongCover(song.album.images[1].url)\n        setSongPreview(song.preview_url)\n        setLoaded(true)\n    }\n\n\n\n    useEffect(() => {\n        getTopSong()\n\n    }, [])\n\n\n    return (\n        <motion.div className=\"TopSong\" exit={{ opacity: 1 }} transition={{ delay: 2 }}>\n            <motion.div\n                className=\"initial-animate-screen\"\n                variants={circleWrapper}\n                initial=\"in\"\n                animate=\"anim\"\n                onAnimationComplete={() => document.querySelector(\".initial-animate-screen\").classList.add(\"display-none\")}\n            >\n                <motion.div className=\"circle\" id=\"one\" variants={circle}\n                // animate={{rotate:[0, -15, 0]}} transition={{duration:2,ease: [0.31, 0.78, 0.83, 0.67] }}\n                >\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                </motion.div>\n                <motion.div className=\"circle two\" variants={circle}\n                // animate={{rotate:[0, -12, 0]}} transition={{duration:2,ease: [0.31, 0.78, 0.83, 0.67] }}\n                >\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                </motion.div>\n                <motion.div className=\"circle three\" variants={circle}\n                // animate={{rotate:[0, -9, 0]}} transition={{duration:2,ease:[0.31, 0.78, 0.83, 0.67] }}\n                >\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                </motion.div>\n                <motion.div className=\"circle four\" variants={circle}\n                // animate={{rotate:[0, -6, 0]}} transition={{duration:2,ease: [0.31, 0.78, 0.83, 0.67] }}\n                >\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                </motion.div>\n                <motion.div className=\"circle five\" variants={circle}\n                // animate={{rotate:[0, -3, 0]}} transition={{duration:2,ease: [0.31, 0.78, 0.83, 0.67] }}\n                >\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                    <h1>The Most Played Song</h1>\n                </motion.div>\n            </motion.div>\n\n            <motion.div\n                className=\"top-song-cont\"\n                onMouseMove={({ clientX: x, clientY: y }) => {\n                    set({ xys: calc(x, y) })\n                }}\n                onMouseLeave={() => set({ xys: [0, 0, 1] })}\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                transition={{ delay: 4.3 }}\n            >\n\n                <animated.div\n                    className=\"top-song-card\"\n                    style={{ transform: props.xys.interpolate(trans) }}\n                >\n                    <div className=\"top-song-img\">\n                        <motion.img\n                            src={loaded ? songCover : null}\n                            alt={loaded ? `${topSong}'s Cover image` : null}\n                            variants={artistInfo} initial=\"in\" animate=\"anim\" exit=\"out\"\n                        />\n                    </div>\n                    <div className=\"text\" style={{ transform: \"translateZ(0px)\" }}>\n                        <div >\n                            <motion.h2\n                                variants={artistInfo} initial=\"in\" animate=\"anim\" exit=\"out\"\n                            >\n                                The Most Played<br />Song :\n                            </motion.h2>\n                        </div>\n                        <div >\n                            <motion.h1\n                                className=\"song-name\"\n                                variants={artistInfo} initial=\"in\" animate=\"anim\" exit=\"out\"\n                            >\n                                {loaded ? topSong : \"loading\"}\n                            </motion.h1>\n                        </div>\n                        <div style={{ transform: \"translateZ(75px)\" }}>\n                            <motion.p\n                                variants={artistInfo} initial=\"in\" animate=\"anim\" exit=\"out\"\n                            >\n                                Sometimes self love is listrning to the same song for 37 hours\n                            </motion.p>\n                        </div>\n                    </div>\n                </animated.div>\n\n            </motion.div>\n\n            <motion.div className=\"pagination\" initial={{ opacity: 0 }} animate={{ opacity: 1 }} transition={{ duration: 1 }}>\n                <div className=\"prev\">\n                    <Link to=\"/top_artist\">\n                        <FaChevronUp style={{ color: \"white\" }} />\n                    </Link>\n                </div>\n                <div className=\"page-no\">\n                    <p><span>2</span> / 4</p>\n                </div>\n                <div className=\"next\">\n                    <Link to=\"/top_five_songs\">\n                        <FaChevronDown style={{ color: \"white\" }} />\n                    </Link>\n                </div>\n            </motion.div>\n\n            {loaded ? (<audio id=\"audio\" src={songPreview} autoPlay loop ></audio>) : null}\n        </motion.div>\n    )\n}\n\nexport default TopSong\n","/Users/suvinnimnaka/Desktop/im-trying-to-build-sth/spotifyWrapped/src/Components/TopFiveSongs/TopFiveSongs.js",["65","66"],"import React, { useState, useEffect } from 'react'\nimport { motion } from 'framer-motion'\nimport './TopFiveSongs.css'\nimport Song from './Song'\nimport { Link } from 'react-router-dom'\nimport { FaChevronUp, FaChevronDown } from 'react-icons/fa'\n\nfunction TopFiveSongs({ spotify }) {\n\n    const [songs, setSongs] = useState(null)\n    const [loaded, setLoaded] = useState(false)\n    const [songPreview, setSongPreview] = useState(null)\n    const [letters, setLetters] = useState(0)\n\n\n    const main = {\n        in: { opacity: 1 },\n        anim: {\n            opacity: 1,\n            transition: {\n                staggerChildren: 5\n            }\n        }\n    }\n\n    const stagger = {\n        in: { opacity: 1 },\n        anim: {\n            opacity: 1,\n            height: \"0%\",\n            transition: {\n                staggerChildren: 1.5,\n                // when:\"afterChildren\",\n                duration: 0.6,\n                delay: 3.5\n            }\n        },\n        out: {\n            opacity: 0,\n            transition: {\n                when: 'afterChildren'\n            }\n        }\n\n    }\n    const staggerTwo = {\n        in: { opacity: 1 },\n        anim: {\n            opacity: 1,\n            transition: {\n                staggerChildren: 0.5\n            }\n        },\n\n    }\n\n    const slideIn = {\n        in: { y: \"210%\" },\n        anim: {\n            y: \"0%\",\n            transition: {\n                duration: 1,\n            }\n        }\n    }\n\n    const songCard = {\n        in: { opacity: 1 },\n        anim: {\n            opacity: 1,\n            transition: {\n                staggerChildren: 0.5\n            }\n        }\n    }\n\n\n    async function getTopFiveSongs() {\n\n\n        const resp = await spotify.getMyTopTracks({\n            limit: 20,\n            offset: 0\n        })\n        console.log(resp.items)\n        setSongs(resp.items)\n        const letter = resp.items.map(a => a.name.length)\n        setLetters(letter.reduce((a, b) => a + b, 0))\n\n        setSongPreview(resp.items[7].preview_url)\n        setLoaded(true)\n\n    }\n\n\n    useEffect(() => {\n        getTopFiveSongs()\n    }, [])\n\n    const getSong = (number) => {\n        return (\n            <Song songName={songs[number].name} songImg={songs[number].album.images[1].url} songArtist={songs[number].album.artists[0].name} />\n        )\n    }\n\n\n\n\n\n    return (\n        <motion.div className=\"TopFiveSongs\" exit={{ transition: { delay: 5 } }}>\n            <motion.div className=\"initial-animate\"\n                variants={stagger}\n                initial=\"in\"\n                animate=\"anim\"\n                exit=\"out\"\n                onAnimationComplete={() => {\n                    document.querySelector('.initial-animate').classList.add(\"display-none\")\n                    document.querySelector(\".top-song-list\").classList.remove(\"display-none\")\n                    document.querySelector(\".text-bg\").classList.remove(\"display-none\")\n                }}\n            >\n                <motion.div variants={staggerTwo} className=\"DIV ONE\">\n                    <motion.div\n                        variants={slideIn}\n                    >\n                        But a year Like\n                    </motion.div>\n                    <motion.div\n                        variants={slideIn}\n                    >\n                        2020 required backup\n                    </motion.div>\n                </motion.div>\n                <motion.div variants={staggerTwo} className=\"DIV`\">\n                    <motion.div\n                        variants={slideIn}\n                    >\n                        These were the other songs\n                    </motion.div>\n                    <motion.div\n                        variants={slideIn}\n                    >\n                        you had on repeat...\n                    </motion.div>\n                </motion.div>\n            </motion.div>\n            <motion.div className=\"top-song-list display-none\" variants={songCard}\n                initial=\"in\" animate=\"anim\"\n            >\n                <div>{loaded ? getSong(1) : null}</div>\n                <div >{loaded ? getSong(2) : null}</div>\n                <div >{loaded ? getSong(3) : null}</div>\n                <div >{loaded ? getSong(4) : null}</div>\n                <div >{loaded ? getSong(5) : null}</div>\n            </motion.div>\n            <motion.div className=\"text-bg display-none\" initial={{ opacity: 0 }} animate={{ opacity: 1 }} transition={{ delay: 3.6, duration: 0.5 }}>\n                <p style={loaded ? { fontSize: `${120 / (letters / 25)}vw` } : null}>{loaded ? songs.map(a => { return a.name }) : \"loading\"}</p>\n            </motion.div>\n\n            <motion.div className=\"pagination\" initial={{ opacity: 0 }} animate={{ opacity: 1 }} transition={{ duration: 1 }}>\n                <div className=\"prev\">\n                    <Link to=\"/top_song\">\n                        <FaChevronUp style={{ color: \"white\" }} />\n                    </Link>\n                </div>\n                <div className=\"page-no\">\n                    <p><span>3</span> / 4</p>\n                </div>\n                <div className=\"next\">\n                    <Link to=\"/top_genre\">\n                        <FaChevronDown style={{ color: \"white\" }} />\n                    </Link>\n                </div>\n            </motion.div>\n            {loaded ? (<audio id=\"audio\" src={songPreview} autoPlay loop ></audio>) : null}\n\n        </motion.div>\n    )\n}\n\nexport default TopFiveSongs\n","/Users/suvinnimnaka/Desktop/im-trying-to-build-sth/spotifyWrapped/src/Components/Start/Start.js",["67"],"import React, { useEffect, useState } from 'react'\nimport './Start.css'\nimport { motion } from 'framer-motion'\nimport { useSpring, animated } from 'react-spring'\nimport { Link } from 'react-router-dom'\n\nfunction Start({ spotify }) {\n\n    const [name, setName] = useState(null)\n\n    const main = {\n        in: { opacity: 0 },\n        anim: {\n            opacity: 1,\n            transition: {\n                duration: 0.2,\n                staggerChildren: 1.5\n            }\n        },\n        // out: {\n        //     y: -500,\n        //     transition: {\n        //         duration:2         \n        //     }\n        // }\n    }\n\n    const textCont = {\n        in: { y: 200 },\n        anim: {\n            y: 0,\n            transition: {\n                duration: 3,\n                staggerChildren: 0.2,\n                delayChildren: 0.5\n            }\n        },\n        out: {\n            y: -500,\n            transition: {\n                duration: 2\n            }\n        }\n    }\n\n    const text = {\n        in: { y: 100 },\n        anim: {\n            y: 0,\n            transition: {\n                duration: 1,\n            }\n        }\n    }\n\n    const btn = {\n        in: { opacity: 0 },\n        anim: {\n            opacity: 1,\n            transition: {\n                duration: 0.7,\n                delay: 4.5\n            }\n        },\n        out: {\n            opacity: 0,\n            scale: 0.5,\n            transition: {\n                duration: 1\n            }\n        }\n    }\n\n    const calc = (x, y) => [((window.innerHeight / 2) - y) / 50, (x - window.innerWidth / 2) / 50, 1.1]\n    const trans = (x, y, s) => `perspective(600px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`\n    const [props, set] = useSpring(() => ({ xys: [0, 0, 1], config: { mass: 5, tension: 350, friction: 50 } }))\n\n    async function getme() {\n        const user = await spotify.getMe()\n        setName(user.display_name)\n    }\n\n    useEffect(() => {\n        getme()\n    }, [])\n\n\n\n\n\n\n    return (\n        <motion.div\n            className=\"Start\"\n            onMouseMove={({ clientX: x, clientY: y }) => {\n                set({ xys: calc(x, y) })\n            }}\n            onMouseLeave={() => set({ xys: [0, 0, 1] })}\n        >\n\n            <div className=\"user\">\n                <motion.p\n                    className=\"user-name\"\n                    initial={{ opacity: 0, scale: 0.6 }}\n                    animate={{ opacity: 1, scale: 1 }}\n                    exit={{ opacity: 0, scale: 0.6 }}\n                    transition={{ duration: 1 }}\n                >Hi {name}</motion.p>\n            </div>\n\n            <animated.div className=\"spring-cont\" style={{ transform: props.xys.interpolate(trans) }}>\n                <motion.div\n                    className=\"main\"\n\n                    variants={main}\n                    initial=\"in\"\n                    animate=\"anim\"\n                    exit=\"out\"\n                >\n                    <motion.div className=\"first-text-cont\">\n                        <motion.h1\n                            className=\"title\"\n                            variants={textCont}\n                        >\n                            <motion.div variants={text}>A</motion.div>\n                            <motion.div variants={text}> lot</motion.div>\n                            <motion.div variants={text}> happened</motion.div>\n                            <motion.div variants={text}> on</motion.div >\n                            <br />\n                            <motion.div variants={text} > Spotify</motion.div>\n                            <motion.div variants={text} > in</motion.div>\n                            <motion.div variants={text} > 2020</motion.div>\n                            <motion.div variants={text} >.</motion.div>\n                        </motion.h1>\n                    </motion.div>\n                    <motion.div className=\"second-text-cont\">\n                        <motion.h2 className=\"text\"\n                            variants={textCont}\n                        >\n                            <motion.div variants={text}>Here</motion.div>\n                            <motion.div variants={text}> are</motion.div>\n                            <motion.div variants={text}> few</motion.div>\n                            <motion.div variants={text}> highlights</motion.div>\n                            <motion.div variants={text}> from</motion.div>\n                            <motion.div variants={text}> year</motion.div>\n                            <br />\n                            <motion.div variants={text}> to</motion.div>\n                            <motion.div variants={text}> remember</motion.div>\n                            <motion.div variants={text}> (or,</motion.div>\n                            <motion.div variants={text}> you</motion.div>\n                            <motion.div variants={text}> know,</motion.div>\n                            <motion.div variants={text}> forget)</motion.div>\n                        </motion.h2>\n                    </motion.div>\n                    <motion.div variants={btn}>\n                        <Link to=\"/top_artist\">\n                            <button\n                                className=\"start-btn\"\n                            >\n                                Start\n                            </button>\n                        </Link>\n                    </motion.div>\n                </motion.div>\n            </animated.div>\n        </motion.div>\n    )\n}\n\nexport default Start\n","/Users/suvinnimnaka/Desktop/im-trying-to-build-sth/spotifyWrapped/src/Components/TopGenre/TopGenre.js",["68","69","70"],"import React, { useEffect, useState } from 'react'\nimport './TopGenre.css'\nimport { motion } from 'framer-motion'\nimport Ring from './ring'\nimport { v4 as uuidv4 } from 'uuid';\nimport { Link } from 'react-router-dom'\nimport { FaChevronDown, FaChevronUp } from 'react-icons/fa'\n\nfunction TopGenre({ spotify }) {\n    const [genre, setGenre] = useState([])\n    const [allGenre, setAllGenre] = useState([])\n    const [loaded, setLoaded] = useState(false)\n    const [letters, setLetters] = useState(0)\n\n\n    const diaArray = [360, 300, 240, 180, 120]\n    const percent = [60, 55, 50, 45, 40]\n\n    const stagger = {\n        in: {\n            // height: \"100%\"\n        },\n        anim: {\n            transition: {\n                staggerChildren: 1,\n            }\n        }\n    }\n\n    const staggerTwo = {\n        in: {\n            opacity: 1\n        },\n        anim: {\n            height: \"0%\",\n            transition: {\n                duration: 0.7,\n                delay: 2.5\n            }\n        }\n    }\n\n    const slideUp = {\n        in: { y: \"150%\" },\n        anim: {\n            y: \"0%\",\n            transition: {\n                duration: 1\n            }\n        }\n    }\n\n    async function getGenre() {\n        const resp = await spotify.getMyTopArtists()\n        const artists = resp.items\n        const allGenres = []\n        artists.map(item => { allGenres.push(...item.genres) })\n        const letter = allGenre.map(a => a.length)\n        setLetters(letter.reduce((a, b) => a + b, 0))\n        setAllGenre(allGenres)\n        const misxedGenres = artists.map(item => { return item.genres[0] })\n        const topGenre = misxedGenres.filter(function (item, pos) {\n            return misxedGenres.indexOf(item) == pos;\n        })\n        setGenre(topGenre)\n        setLoaded(true)\n    }\n\n    useEffect(() => {\n        getGenre()\n    }, [])\n\n\n    return (\n        <motion.div className=\"TopGenre\" >\n            <motion.div\n                className=\"initial-animate\"\n                variants={stagger}\n                initial=\"in\"\n                animate=\"anim\"\n                onAnimationComplete={() => {\n                    document.querySelector(\".initial-animate\").classList.add(\"display-none\")\n                    document.querySelector('.h1').classList.add('slideUp')\n                }}\n            >\n                <motion.div\n                    className=\"textOne\"\n                    variants={staggerTwo}\n                >\n                    <motion.div variants={slideUp}>\n                        You were genre-fluid.\n                    </motion.div>\n                </motion.div>\n                <motion.div\n                    className=\"textTwo\"\n                    variants={staggerTwo}\n                >\n                    <motion.div variants={slideUp}>\n                        You refused to let one sound define you.\n                    </motion.div>\n                </motion.div>\n            </motion.div>\n            <div className=\"title\">\n                <h1 className=\"h1\">Your top genres were</h1>\n            </div>\n            <motion.div className=\"top-genre-chart-cont\">\n                {loaded ? genre.slice(0, 5).map((item, index) => (\n                    <Ring dia={diaArray[index]} genre={item} key={uuidv4()} percent={percent[index]} />\n                )) : null}\n            </motion.div>\n            <div className=\"genre-bg\">\n                <h1 style={loaded ? { fontSize: `${100 / (letters / 35)}vw` } : { fontSize: \"6.5vw\" }}>{loaded ? allGenre.map(item => { return `${item} ` }) : null}</h1>\n            </div>\n            <motion.div className=\"pagination\" initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }} transition={{ duration: 1 }}>\n                <div className=\"prev\">\n                    <Link to=\"/top_five_songs\">\n                        <FaChevronUp style={{ color: \"white\" }} />\n                    </Link>\n                </div>\n                <div className=\"page-no\">\n                    <p><span>4</span> / 4</p>\n                </div>\n                <div className=\"next\" style={{ opacity: 0, pointerEvents: \"none\" }}>\n                    <Link to=\"/\">\n                        <FaChevronDown style={{ color: \"white\" }} />\n                    </Link>\n                </div>\n            </motion.div>\n        </motion.div>\n    )\n}\n\nexport default TopGenre\n","/Users/suvinnimnaka/Desktop/im-trying-to-build-sth/spotifyWrapped/src/Components/TopFiveSongs/Song.js",["71","72","73"],"import React, { useEffect } from 'react'\nimport \"./Song.css\"\nimport { usePalette } from 'react-palette'\nimport { motion } from 'framer-motion'\n\nfunction Song({ songName, songImg, songArtist }) {\n\n    const { data, loading, error } = usePalette(songImg)\n\n    const popUp = {\n        in: { y: \"200%\" },\n        anim: {\n            y: \"0%\",\n            transition: {\n                duration: 1.2,\n                delay: 3.6\n            },\n            out: {\n                y: \"-200%\",\n                transition: {\n                    duration: 1.2\n                }\n            }\n        }\n    }\n\n    return (\n        <motion.div className=\"Song\" style={{ backgroundColor: data.darkVibrant }}\n            variants={popUp} initial=\"in\" animate=\"anim\" exit=\"out\" >\n            <div className=\"song-img\">\n                <img src={songImg} alt=\"\" />\n            </div>\n            <div className=\"song-info\" style={{ color: data.lightVibrant }}>\n                <h1 className=\"song-name\">{songName}</h1>\n                <h2 className=\"song-artist\">{songArtist}</h2>\n            </div>\n        </motion.div>\n    )\n}\n\nexport default Song\n","/Users/suvinnimnaka/Desktop/im-trying-to-build-sth/spotifyWrapped/src/Components/TopGenre/ring.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":33,"column":6,"nodeType":"80","endLine":33,"endColumn":8,"suggestions":"81"},{"ruleId":"82","severity":1,"message":"83","line":78,"column":38,"nodeType":"84","messageId":"85","endLine":78,"endColumn":40},{"ruleId":"78","severity":1,"message":"86","line":90,"column":8,"nodeType":"80","endLine":90,"endColumn":10,"suggestions":"87"},{"ruleId":"88","severity":1,"message":"89","line":14,"column":12,"nodeType":"90","messageId":"91","endLine":14,"endColumn":17},{"ruleId":"78","severity":1,"message":"92","line":84,"column":8,"nodeType":"80","endLine":84,"endColumn":10,"suggestions":"93"},{"ruleId":"88","severity":1,"message":"94","line":16,"column":11,"nodeType":"90","messageId":"91","endLine":16,"endColumn":15},{"ruleId":"78","severity":1,"message":"95","line":98,"column":8,"nodeType":"80","endLine":98,"endColumn":10,"suggestions":"96"},{"ruleId":"78","severity":1,"message":"97","line":85,"column":8,"nodeType":"80","endLine":85,"endColumn":10,"suggestions":"98"},{"ruleId":"82","severity":1,"message":"83","line":57,"column":26,"nodeType":"84","messageId":"85","endLine":57,"endColumn":28},{"ruleId":"99","severity":1,"message":"100","line":63,"column":47,"nodeType":"101","messageId":"102","endLine":63,"endColumn":49},{"ruleId":"78","severity":1,"message":"103","line":71,"column":8,"nodeType":"80","endLine":71,"endColumn":10,"suggestions":"104"},{"ruleId":"88","severity":1,"message":"105","line":1,"column":17,"nodeType":"90","messageId":"91","endLine":1,"endColumn":26},{"ruleId":"88","severity":1,"message":"106","line":8,"column":19,"nodeType":"90","messageId":"91","endLine":8,"endColumn":26},{"ruleId":"88","severity":1,"message":"107","line":8,"column":28,"nodeType":"90","messageId":"91","endLine":8,"endColumn":33},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'spotify'. Either include it or remove the dependency array.","ArrayExpression",["110"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'getTopArtist'. Either include it or remove the dependency array.",["111"],"no-unused-vars","'songs' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'getTopSong'. Either include it or remove the dependency array.",["112"],"'main' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getTopFiveSongs'. Either include it or remove the dependency array.",["113"],"React Hook useEffect has a missing dependency: 'getme'. Either include it or remove the dependency array.",["114"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'getGenre'. Either include it or remove the dependency array.",["115"],"'useEffect' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},"Update the dependencies array to be: [spotify]",{"range":"128","text":"129"},"Update the dependencies array to be: [getTopArtist]",{"range":"130","text":"131"},"Update the dependencies array to be: [getTopSong]",{"range":"132","text":"133"},"Update the dependencies array to be: [getTopFiveSongs]",{"range":"134","text":"135"},"Update the dependencies array to be: [getme]",{"range":"136","text":"137"},"Update the dependencies array to be: [getGenre]",{"range":"138","text":"139"},[936,938],"[spotify]",[2554,2556],"[getTopArtist]",[2294,2296],"[getTopSong]",[2106,2108],"[getTopFiveSongs]",[1966,1968],"[getme]",[1839,1841],"[getGenre]"]